<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uracle.sample.api.sample.TestMapper">

    <!--   #####  Users  #####   -->

    <insert id="createUser" parameterType="com.uracle.sample.api.walking.Users">
        --  User 객체를 생성
        insert into users(phone_number, name)
        values(#{phone_number}, #{name})
    </insert>

    <select id="selectUserById" resultType="com.uracle.sample.api.walking.Users">
        --  특정 phone_number(id)를 가진 User 객체를 반환(출력)
        select phone_number, name, registration_date
        from users
        where phone_number = #{phone_number}
    </select>

    <select id="selectUser" resultType="com.uracle.sample.api.walking.Users">
        --  모든 User 객체를 만든 순서대로 반환(출력)
        select phone_number, name, registration_date
        from users
        order by registration_date
    </select>

    <update id="updateUser" parameterType="com.uracle.sample.api.walking.Users">
        --  특정 phone_number(id)를 가진 User 객체의 값을 수정
        update users
        set
        <if test="phone_number != null and phone_number != ''">
            phone_number = #{phone_number},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        where phone_number = #{phone_number}
    </update>

    <delete id="deleteUser" parameterType="com.uracle.sample.api.walking.Users">
        --  특정 phone_number(id)를 가진 User 객체를 삭제
        delete from users
        where phone_number = #{phone_number}
    </delete>



    <!--   #####  User  #####   -->

    <select id="selectCharacter" resultType="com.uracle.sample.api.walking.Characters">
        --  모든 캐릭터를 char_id순으로 반환(출력)
        select char_id, character_info, character_name, required_points, img_url
        from characters
        order by char_id
    </select>



    <!--   #####  UserCharacters  #####   -->

    <insert id="getCharacter" parameterType="com.uracle.sample.api.walking.UserCharacters">
        --  특정 User 객체(phone_number(id)로 판별)의 캐릭터를 추가(생성)
        insert into user_characters(phone_number, exp, character_info)
        values(#{phone_number}, 0, #{character_info})
    </insert>

    <select id="selectUserCharacter" resultType="com.uracle.sample.api.walking.UserCharacters">
        --  특정 User 객체(phone_number(id)로 판별)의 모든 캐릭터를 user_char_id(id)순으로 반환(출력)
        select user_char_id, phone_number, exp, character_info, character_nickname, acquisition_date, is_active
        from user_characters
        order by user_char_id
    </select>

    <update id="updateCharacter" parameterType="com.uracle.sample.api.walking.UserCharacters">
        --  특정 User 객체(phone_number(id)로 판별)의 특정 캐릭터(user_char_id(id)로 판별)를 수정
        update user_characters
        set
        <if test="character_nickname != null and character_nickname != ''">
            character_nickname = #{character_nickname},
        </if>
        <if test="exp != null and exp != ''">
            exp = #{exp},
        </if>
        <if test="is_active != null and is_active != ''">
            is_active = #{is_active},
        </if>
        where user_char_id = #{user_char_id}
    </update>
    <!--삭제될 일이 없기 때문에 삭제는 넣지 않음-->



    <!--   #####  Stations  #####   -->

    <insert id="initStation" parameterType="com.uracle.sample.api.walking.Stations">
        --  처음에 db에 staion을 넣는 용도
        insert into stations(latitude, longitude, points)
        values(#{latitude}, #{longitude}, 100)
    </insert>

    <select id="selectStatioin" resultType="com.uracle.sample.api.walking.Stations">
        --  만들어진 모든 staion을 반환(출력)
        select latitude, longitude, points
        from stations
    </select>

    <delete id="deleteStatioin" parameterType="com.uracle.sample.api.walking.Stations">
        --  특정 staion 삭제
        delete from stations
        where location_PK = #{location_PK}
        --  location_PK = latitude, longitude
    </delete>


    <!--   #####  UserStations  #####   -->

    <insert id="insertUserStation" parameterType="com.uracle.sample.api.walking.UserStations">
        --  특정 User 객체(phone_number(id)로 판별)가 다녀갔던(포인트를 얻었던) staion 정보 추가
        insert into user_stations(phone_number, latitude, longitude)
        values(#{phone_number}, #{latitude}, #{longitude})
    </insert>

    <select id="selectUserStatioin" resultType="com.uracle.sample.api.walking.UserStations">
        --  특정 User 객체(phone_number(id)로 판별)가 다녀갔던(포인트를 얻었던) 모든 staion을 다녀갔던 순서대로(user_station_id) 반환(출력)
        select user_station_id, phone_number, visit_date
        from user_stations
        order by user_station_id
    </select>

    <delete id="clearUserStatioin" parameterType="com.uracle.sample.api.walking.UserStations">
        --  특정 User 객체(phone_number(id)로 판별)가 다녀갔던(포인트를 얻었던) 모든 staion 정보를 삭제(station 테이블의 객체가 사라지지는 않음)
        --  3일에 한번씩(720시간)
        delete from user_stations
        where phone_number = #{phone_number}
    </delete>




    <!--   #####  SearchHistory  #####   -->

    <insert id="insertSearchHistory" parameterType="com.uracle.sample.api.walking.SearchHistory">
        --  특정 User 객체(phone_number(id)로 판별)가 검색한 기록을 저장(추가)
        insert into search_history(phone_number, search_term)
        values(#{phone_number}, #{search_term})
    </insert>

    <select id="selectSearchHistory" resultType="com.uracle.sample.api.walking.SearchHistory">
        --  특정 User 객체(phone_number(id)로 판별)가 검색한 모든 기록을 검색했던 순서대로(history_id) 반환(출력)
        select history_id, phone_number, search_term, search_date
        from search_history
        order by history_id
    </select>

    <delete id="deleteSearchHistory" parameterType="com.uracle.sample.api.walking.SearchHistory">
        --  특정 User 객체(phone_number(id)로 판별)가 검색했던 기록을 삭제
        --  최대 행 개수를 5개로 정하고 가장 오래된 기록부터 삭제
        delete from search_history
        where history_id = #{history_id}
    </delete>


    
</mapper>